Sender: LSF System <lsfadmin@eu-g3-056>
Subject: Job 203963796: <python logicedu.py -t /cluster/project/sachan/abhinav/saved_models/distilbert -m /cluster/project/sachan/abhinav/saved_models/distilbert -w 12 -s /cluster/project/sachan/abhinav/saved_models/distilbert-ft -mp base -ts 1 -ds 1> in cluster <euler> Done

Job <python logicedu.py -t /cluster/project/sachan/abhinav/saved_models/distilbert -m /cluster/project/sachan/abhinav/saved_models/distilbert -w 12 -s /cluster/project/sachan/abhinav/saved_models/distilbert-ft -mp base -ts 1 -ds 1> was submitted from host <eu-login-07> by user <alalwani> in cluster <euler> at Mon Feb  7 19:21:52 2022
Job was executed on host(s) <eu-g3-056>, in queue <gpuhe.4h>, as user <alalwani> in cluster <euler> at Mon Feb  7 19:22:05 2022
</cluster/home/alalwani> was used as the home directory.
</cluster/home/alalwani/logical-fallacy/codes_for_models/abhinav_experiments> was used as the working directory.
Started at Mon Feb  7 19:22:05 2022
Terminated at Mon Feb  7 19:37:58 2022
Results reported at Mon Feb  7 19:37:58 2022

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python logicedu.py -t /cluster/project/sachan/abhinav/saved_models/distilbert -m /cluster/project/sachan/abhinav/saved_models/distilbert -w 12 -s /cluster/project/sachan/abhinav/saved_models/distilbert-ft -mp base -ts 1 -ds 1
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   922.30 sec.
    Max Memory :                                 6422 MB
    Average Memory :                             5731.12 MB
    Total Requested Memory :                     30000.00 MB
    Delta Memory :                               23578.00 MB
    Max Swap :                                   -
    Max Processes :                              3
    Max Threads :                                9
    Run time :                                   952 sec.
    Turnaround time :                            966 sec.

The output (if any) follows:

device = cuda
Namespace(tokenizer='/cluster/project/sachan/abhinav/saved_models/distilbert', model='/cluster/project/sachan/abhinav/saved_models/distilbert', weight='12', savepath='/cluster/project/sachan/abhinav/saved_models/distilbert-ft', finetune='F', savepath2='mnli', map='base', train_strat='1', dev_strat='1', replace_strat='char', replace_count=1, multinli_path='', downsample='F', classwise_savepath=None, result_path=None, do_not_train='F')
initializing model
creating dataset
starting training
0 0
0 10
0 20
0 30
0 40
0 50
0 60
0 70
0 80
0 90
0 100
0 110
0 120
0 130
0 140
0 150
0 160
0 170
0 180
0 190
0 200
0 210
0 220
0 230
0 240
0 250
0 260
0 270
0 280
0 290
0 300
0 310
0 320
0 330
0 340
0 350
0 360
0 370
0 380
0 390
0 400
0 410
0 420
0 430
0 440
0 450
0 460
0 470
0 480
0 490
0 500
0 510
0 520
0 530
0 540
0 550
0 560
0 570
0 580
0 590
0 600
0 610
0 620
0 630
0 640
0 650
0 660
0 670
0 680
0 690
0 700
0 710
0 720
0 730
0 740
0 750
saving model
Epoch 1: train_loss: 0.6968 train_acc: 0.7224 train_prec: 0.0640 train_rec: 0.2420| val_loss: 0.6576 val_acc: 0.8774 val_prec: 0.1933 val_rec: 0.1896
00:02:59.51
1 0
1 10
1 20
1 30
1 40
1 50
1 60
1 70
1 80
1 90
1 100
1 110
1 120
1 130
1 140
1 150
1 160
1 170
1 180
1 190
1 200
1 210
1 220
1 230
1 240
1 250
1 260
1 270
1 280
1 290
1 300
1 310
1 320
1 330
1 340
1 350
1 360
1 370
1 380
1 390
1 400
1 410
1 420
1 430
1 440
1 450
1 460
1 470
1 480
1 490
1 500
1 510
1 520
1 530
1 540
1 550
1 560
1 570
1 580
1 590
1 600
1 610
1 620
1 630
1 640
1 650
1 660
1 670
1 680
1 690
1 700
1 710
1 720
1 730
1 740
1 750
saving model
Epoch 2: train_loss: 0.6576 train_acc: 0.7978 train_prec: 0.1612 train_rec: 0.3272| val_loss: 0.5985 val_acc: 0.8459 val_prec: 0.2450 val_rec: 0.4680
00:03:00.16
2 0
2 10
2 20
2 30
2 40
2 50
2 60
2 70
2 80
2 90
2 100
2 110
2 120
2 130
2 140
2 150
2 160
2 170
2 180
2 190
2 200
2 210
2 220
2 230
2 240
2 250
2 260
2 270
2 280
2 290
2 300
2 310
2 320
2 330
2 340
2 350
2 360
2 370
2 380
2 390
2 400
2 410
2 420
2 430
2 440
2 450
2 460
2 470
2 480
2 490
2 500
2 510
2 520
2 530
2 540
2 550
2 560
2 570
2 580
2 590
2 600
2 610
2 620
2 630
2 640
2 650
2 660
2 670
2 680
2 690
2 700
2 710
2 720
2 730
2 740
2 750
saving model
Epoch 3: train_loss: 0.6089 train_acc: 0.8243 train_prec: 0.2092 train_rec: 0.4173| val_loss: 0.5549 val_acc: 0.8398 val_prec: 0.2566 val_rec: 0.5163
00:03:00.21
3 0
3 10
3 20
3 30
3 40
3 50
3 60
3 70
3 80
3 90
3 100
3 110
3 120
3 130
3 140
3 150
3 160
3 170
3 180
3 190
3 200
3 210
3 220
3 230
3 240
3 250
3 260
3 270
3 280
3 290
3 300
3 310
3 320
3 330
3 340
3 350
3 360
3 370
3 380
3 390
3 400
3 410
3 420
3 430
3 440
3 450
3 460
3 470
3 480
3 490
3 500
3 510
3 520
3 530
3 540
3 550
3 560
3 570
3 580
3 590
3 600
3 610
3 620
3 630
3 640
3 650
3 660
3 670
3 680
3 690
3 700
3 710
3 720
3 730
3 740
3 750
saving model
Epoch 4: train_loss: 0.5303 train_acc: 0.8078 train_prec: 0.2266 train_rec: 0.5293| val_loss: 0.5068 val_acc: 0.6926 val_prec: 0.1767 val_rec: 0.7798
00:03:00.24
4 0
4 10
4 20
4 30
4 40
4 50
4 60
4 70
4 80
4 90
4 100
4 110
4 120
4 130
4 140
4 150
4 160
4 170
4 180
4 190
4 200
4 210
4 220
4 230
4 240
4 250
4 260
4 270
4 280
4 290
4 300
4 310
4 320
4 330
4 340
4 350
4 360
4 370
4 380
4 390
4 400
4 410
4 420
4 430
4 440
4 450
4 460
4 470
4 480
4 490
4 500
4 510
4 520
4 530
4 540
4 550
4 560
4 570
4 580
4 590
4 600
4 610
4 620
4 630
4 640
4 650
4 660
4 670
4 680
4 690
4 700
4 710
4 720
4 730
4 740
4 750
Epoch 5: train_loss: 0.4496 train_acc: 0.8092 train_prec: 0.2588 train_rec: 0.6432| val_loss: 0.5278 val_acc: 0.7875 val_prec: 0.2187 val_rec: 0.6167
00:02:57.75
starting testing
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
micro f1: 0.269581 macro f1:0.261180 precision: 0.220557 recall: 0.740000 exact match 0.046667
['fallacy of credibility', 'fallacy of relevance', 'equivocation', 'ad populum', 'faulty generalization', 'appeal to emotion', 'fallacy of logic', 'fallacy of extension', 'false causality', 'intentional', 'false dilemma', 'circular reasoning', 'ad hominem']
